// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  identifier     String         @id @default(uuid())
  firstname      String
  lastname       String
  email          String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  passwordHash   String
  passwordSalt   String
  profilePicture String?
  rating         Float
  Item           Item[]
  favorite       String[]
  location       Location?
  locationId     String?
  conversations  Conversation[]
}

model Location {
  identifier String @id @default(uuid())
  address    String
  lat        Float
  lon        Float
  user       User   @relation(fields: [userId], references: [identifier])
  userId     String @unique
}

//TODO: need more work
model Conversation {
  identifier     String   @id @default(uuid())
  createdAt      DateTime @default(now())
  content        String[] // each element represent the one message, but with prefix denote 'owner' || 'offer'
  User           User?    @relation(fields: [userIdentifier], references: [identifier])
  userIdentifier String?
}

// the product owner can add as he want :)
model Category {
  identifier     String @id @default(uuid())
  title          String @db.VarChar(50)
  description    String
  Items          Item[]
}

model Item {
  identifier  String   @id @default(uuid())
  title       String   @db.VarChar(50)
  images      String[]
  description String
  user        User     @relation(fields: [userId], references: [identifier])
  userId      String
  sellType    SellType
  createdAt   DateTime @default(now())
  category    Category @relation(fields: [catId], references: [identifier])
  catId       String
}

enum SellType {
  SWAP
  FREE
}
